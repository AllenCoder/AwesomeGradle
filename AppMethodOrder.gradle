//核心任务：在captures文件目录下输出 基于最新.trace文件的函数调用信息的txt版本
//说明：dmtracedump 为 android sdk自带工具，要执行dmtracedump命令则需要先添加环境变量
task AppOutPutMethodOrder() {
  doLast {
    def capturesDirPath = project.getProjectDir().getParentFile().path + File.separator +
        "captures";
    def capturesDir = new File(capturesDirPath);
    capturesDir.traverse {
      if (it.isFile() && it.name.endsWith(".trace")) {
        def orderName = it.name.replace("trace", "txt")
        def orderFile = new File(capturesDirPath, orderName)

        //说明：dmtracedump 为 android sdk自带工具，要执行dmtracedump命令则需要先添加环境变量
        def baseComand = "dmtracedump  -ho " + it.absolutePath + " >> " + orderFile.absolutePath
        println baseComand
        String osNameMatch = System.getProperty("os.name").toLowerCase();
        if (osNameMatch.contains("windows")) {
          ("cmd /c start  /b " + baseComand).execute()
        } else {
          ["bash", "-c", baseComand].execute()
        }
      }
    }
  }
}

//这里AppFilterMethodOrder 任务其实也不需要 执行找到 \captures 目录找到 base_order.txt
//用Notepad++ 使用正则 先过滤 带 xit 的行 （我们只关注ent 行就行，ent代表进入执行函数　xit代表退出函数）再过滤掉你不关心的包名
// Notepad++ 中过滤将会使用到的命令行如下
//^.*xit.*$ //去除掉 含有 xit 字符串的行  然后替换为空
// ^((?!XXX).)*$  //去除不包含XXX的行  然后替换为空
//^\s+   //合并空行  然后替换为空

task AppFilterMethodOrder() {
  doLast {
    //TODO 替换为你想要过滤的包名
    def filterPackageName = "com.caiyi"
    //处理包名
    def filterSignature = filterPackageName.replaceAll("[.]", "/")

    def capturesDirPath = project.getProjectDir().getParentFile().path + File.separator +
        "captures";
    def capturesDir = new File(capturesDirPath);

    println("filterSignature"+filterSignature)
    println("capturesDirPath"+capturesDirPath)
    println("capturesDir"+capturesDir)

    capturesDir.traverse {
      if (it.isFile() && it.name.endsWith(".txt") && !it.name.contains("--filter")) {
        def orderName = it.name.replace(".txt", "--filter.txt")
        def orderFile = new File(capturesDirPath, orderName)
        println("capturesDir.traverse"+orderName)
        it.eachLine { line ->

          if (line.contains(" ent ")//兼容不同版本traceview 有的是方法包名有的是方法签名
              && (line.contains(filterPackageName) || line.contains(filterSignature))) {
            println("line"+line)
            orderFile.append(line + "\n")
          }
        }
      }
    }
  }
}
